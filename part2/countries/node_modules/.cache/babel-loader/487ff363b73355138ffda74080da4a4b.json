{"ast":null,"code":"var _jsxFileName = \"/home/heather/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Subheader = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Subheader;\n\nconst Statistics = props => {\n  if (Number.isNaN(props.average)) {\n    return 0;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"good\",\n          value: props.good\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"neutral\",\n          value: props.neutral\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"bad\",\n          value: props.bad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"all\",\n          value: props.all\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"average\",\n          value: props.average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Statistic, {\n          text: \"positive\",\n          value: `${props.positive}%`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst History = props => {\n  if (props.good === 0 && props.neutral === 0 && props.bad === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = History;\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 3\n}, this);\n\n_c5 = Button;\n\nconst Statistic = props => {\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n};\n\n_c6 = Statistic;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const all = good + neutral + bad;\n  const average = (good - bad) / (good + neutral + bad);\n  const positive = good / (good + neutral + bad) * 100;\n  const title = 'give feedback';\n  const subtitle = 'statistics';\n\n  const setToGood = () => {\n    setGood(good + 1);\n  };\n\n  const setToNeutral = () => {\n    setNeutral(neutral + 1);\n  };\n\n  const setToBad = () => {\n    setBad(bad + 1);\n  };\n\n  const child = props => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        handleClick: setToGood,\n        text: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: setToNeutral,\n        text: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: setToBad,\n        text: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Subheader, {\n        subtitle: subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        all: all,\n        average: average,\n        positive: positive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(History, {\n        good: good,\n        neutral: neutral,\n        bad: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c7 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Subheader\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"History\");\n$RefreshReg$(_c5, \"Button\");\n$RefreshReg$(_c6, \"Statistic\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"sources":["/home/heather/part1/src/App.js"],"names":["React","useState","Header","props","title","Subheader","subtitle","Statistics","Number","isNaN","average","good","neutral","bad","all","positive","History","Button","handleClick","text","Statistic","value","App","setGood","setNeutral","setBad","setToGood","setToNeutral","setToBad","child"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst Header = (props) => {\n \n  return (\n    <div>\n      <h1>{props.title}</h1>\n    </div>\n  )}\n\nconst Subheader = (props) => {\n  return (\n    <div>\n      <h2>{props.subtitle}</h2>\n    </div>\n  )\n}\nconst Statistics = (props) => {\n  if (Number.isNaN(props.average)) {\n    return ( \n      0\n    )\n  }\n  return (\n    <div>\n      <table>\n        <tbody>\n          <Statistic text=\"good\" value ={props.good} />\n          <Statistic text=\"neutral\" value={props.neutral} />\n          <Statistic text=\"bad\" value={props.bad} />\n          <Statistic text=\"all\" value={props.all}/>\n          <Statistic text=\"average\" value={props.average} />\n          <Statistic text=\"positive\" value={`${props.positive}%`}/>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst History = (props) => {\n  if(props.good === 0 && props.neutral === 0 && props.bad === 0)  {\n    return (\n      <div>\n        No feedback given\n      </div>\n    )\n  }\n  return (\n    <div>\n      \n    </div>\n  )  \n} \n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Statistic = (props) => {\n  return (\n    \n      <tr>\n        <td>{props.text}</td>\n        <td>{props.value}</td>\n      </tr>\n    \n  )\n}\n\n\n      \n    \n    \n  \n\n\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const all = good + neutral + bad\n  const average = (good - bad) / (good + neutral + bad)\n   \n  const positive = (good / (good + neutral + bad) * 100)\n  const title = 'give feedback'\n  const subtitle = 'statistics' \n  const setToGood = () => {\n    setGood(good + 1)\n  }\n  const setToNeutral = () => {\n    setNeutral(neutral + 1)\n  }\n  const setToBad = () => {\n    setBad(bad + 1)\n  }\n  const child = (props) => {\n \n  }\n  \n\n\n  return (\n    <div>\n      <Header title={title} />\n      <div>\n      <Button handleClick={setToGood} text=\"good\" />\n      <Button handleClick={setToNeutral} text=\"neutral\" />\n      <Button handleClick={setToBad} text=\"bad\" />\n      </div>\n      <div>\n        <Subheader subtitle={subtitle} />\n      </div>\n    \n      <>\n        <Statistics good={good} neutral={neutral} bad={bad} all={all} average={average}  positive={positive}/>\n        \n      </>\n      \n      <div>\n        <History good={good} neutral={neutral} bad={neutral} />\n      </div>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}