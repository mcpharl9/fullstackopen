{"ast":null,"code":"var _jsxFileName = \"/home/heather/part1/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = ({\n  handleClick,\n  text\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  onClick: handleClick,\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Button;\n\nconst Weather = ({\n  capital\n}) => {\n  _s();\n\n  const capName = useRef(capital);\n  useEffect(() => {\n    const api_key = process.env.REACT_APP_API_KEY;\n    console.log('http://api.weatherstack.com/current?access_key=' + api_key + '&query=' + capName);\n    axios.get('http://api.weatherstack.com/current?access_key=' + api_key + '&query=' + capName).then(response => {\n      console.log(response.data);\n      return \"Weather in \" + capName;\n    });\n  }, []);\n};\n\n_s(Weather, \"lhoMMBsfFozKyO2xAJUJHQh6h4o=\");\n\n_c2 = Weather;\n\nconst App = () => {\n  _s2();\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      console.log(response.data);\n      setCountries(response.data);\n    });\n  }, []);\n  const [countries, setCountries] = useState([]);\n  const [showAll, setShowAll] = useState('');\n  const [styleChange, setStyleChange] = useState(false);\n  const countriesToShow = countries.filter(country => country.name.toLowerCase().includes(showAll.toLowerCase()));\n\n  const handleCountryChange = event => {\n    setShowAll(event.target.value);\n  };\n\n  const setVis = () => {\n    setStyleChange(true);\n  };\n\n  if (countriesToShow.length > 10) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: showAll,\n        onChange: handleCountryChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Too many matches, specify another filter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: showAll,\n        onChange: handleCountryChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 24\n      }, this), countriesToShow.map(country => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: styleChange ? \"none\" : \"block\"\n          },\n          children: [country.name, \" \", /*#__PURE__*/_jsxDEV(Button, {\n            handleClick: setVis,\n            text: \"show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 30\n          }, this)]\n        }, country.area, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: styleChange ? \"block\" : \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: country.name\n          }, country.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"capital \", country.capital, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), \"population \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"languages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: country.languages.map(lang => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: lang.name\n            }, lang.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            alt: \"Country Flag\",\n            width: \"200\",\n            height: \"100\"\n          }, country.alpha2Code, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Weather, {\n            capital: country.capital\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, country.alpha3Code, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)]\n      }, country.population, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s2(App, \"AR2BbseF0TUOqrJHVFuuGpRf+7U=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Weather\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/home/heather/part1/src/App.js"],"names":["React","useState","useEffect","useRef","axios","Button","handleClick","text","Weather","capital","capName","api_key","process","env","REACT_APP_API_KEY","console","log","get","then","response","data","App","setCountries","countries","showAll","setShowAll","styleChange","setStyleChange","countriesToShow","filter","country","name","toLowerCase","includes","handleCountryChange","event","target","value","setVis","length","map","display","area","population","languages","lang","flag","alpha2Code","alpha3Code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport axios from 'axios'\n\nconst Button = ({handleClick, text}) => (\n  <button onClick={handleClick}>\n    {text}\n  </button>\n)\n\nconst Weather = ({capital}) => {\n  const capName = useRef(capital)\n  useEffect(() => {\n  const api_key = process.env.REACT_APP_API_KEY\n  \n  console.log('http://api.weatherstack.com/current?access_key='+api_key+'&query='+capName)\n  axios.get('http://api.weatherstack.com/current?access_key='+api_key+'&query='+capName\n  )\n  .then(response => {\n  console.log(response.data)\n  return (\n    \"Weather in \" +capName\n  )\n  })\n}, [])\n}\n\nconst App = () => {\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all')\n    .then(response => {\n    console.log(response.data)\n    setCountries(response.data)\n    })\n  }, [])\n  \n  \n\n\n  const [countries, setCountries] = useState([])\n    \n  const [showAll, setShowAll] = useState('')\n\n  const [styleChange, setStyleChange] = useState(false)\n    \n  const countriesToShow = \n      countries.filter(country => country.name.toLowerCase().includes(showAll.toLowerCase()))\n  \n  \n      \n  const handleCountryChange = (event) => {\n    setShowAll(event.target.value)\n    }\n  const setVis = () => {\n    setStyleChange(true)\n  }\n   \n  \n\n\n  if (countriesToShow.length > 10) {\n      return (\n        <div>\n        find countries <input\n        value = {showAll}\n        onChange={handleCountryChange}/>\n\n        <p>Too many matches, specify another filter</p>\n        </div>\n      )\n    }\n  else {\n    return (\n      <div>\n        find countries <input\n        value = {showAll}\n        onChange={handleCountryChange}/>\n        \n       \n        {countriesToShow.map(country => (\n          <div key={country.population}>\n            <div key={country.area} style={{display: styleChange ? \"none\" : \"block\"}}>\n              {country.name} <Button handleClick={setVis} text=\"show\" />\n            </div>\n              <div key={country.alpha3Code} style={{display: styleChange ? \"block\" : \"none\"}}> \n              <h2 key={country.name}>{country.name}</h2>\n              <br />\n              <div>\n                capital {country.capital}\n                <br />\n                population {country.population}\n              </div>\n              <h3>\n                languages\n              </h3>\n              <ul>\n                {country.languages.map(lang => \n                <li key={lang.name}>{lang.name}</li>\n                )}\n              </ul>\n              <img key={country.alpha2Code} src={country.flag} alt=\"Country Flag\" width=\"200\" height=\"100\"/>\n              <Weather capital={country.capital} />\n              </div>\n            </div>\n          )\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}