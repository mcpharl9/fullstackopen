{"ast":null,"code":"var _jsxFileName = \"/home/heather/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  useEffect(() => {\n    axios.get('https://restcountries.eu/rest/v2/all').then(response => {\n      console.log(response.data);\n      countriesToShow.map(country => response.data.name);\n    });\n  }, []);\n  const [countries, setCountries] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"find countries \", /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"LTmHzK+5+S1v1UzRWj6s+cFkQ6A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/heather/part1/src/App.js"],"names":["React","useState","useEffect","axios","App","get","then","response","console","log","data","countriesToShow","map","country","name","countries","setCountries"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACdF,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAACE,GAAN,CAAU,sCAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAC,MAAAA,eAAe,CAACC,GAAhB,CAAoBC,OAAO,IAAIN,QAAQ,CAACG,IAAT,CAAcI,IAA7C;AACC,KAJD;AAMD,GAPM,EAOJ,EAPI,CAAT;AASA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AAGE,sBACE;AAAA,+CACmB;AAAA;AAAA;AAAA;AAAA,YADnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKL,CAlBD;;GAAMG,G;;KAAAA,G;AAmBN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n\nconst App = () => {\n    useEffect(() => {\n        axios.get('https://restcountries.eu/rest/v2/all')\n        .then(response => {\n        console.log(response.data)\n        countriesToShow.map(country => response.data.name)\n        })\n       \n      }, [])\n    \n    const [countries, setCountries] = useState([])\n    \n    \n      return (\n        <div>\n            find countries <input/>\n        </div>\n    )\n}\nexport default App"]},"metadata":{},"sourceType":"module"}