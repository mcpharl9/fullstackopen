{"ast":null,"code":"var _jsxFileName = \"/home/heather/part1/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Header;\n\nconst Part = props => {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.name, props.exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Part;\n\nconst Content = ({\n  parts\n}) => parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n  name: part.name,\n  exercises: part.exercises\n}, part.id, false, {\n  fileName: _jsxFileName,\n  lineNumber: 22,\n  columnNumber: 5\n}, this));\n\n_c3 = Content;\n\nconst Total = ({\n  parts\n}) => {\n  const total = parts.reduce((sum, currentNumber) => sum + currentNumber.exercises, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total of \", total, \" exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c4 = Total;\n\nconst Course = ({\n  course\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: course.parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Course;\n\nconst App = () => {\n  const courses = [{\n    name: 'Half Stack application development ',\n    id: 1,\n    parts: [{\n      name: 'Fundamentals of React ',\n      exercises: 10,\n      id: 1\n    }, {\n      name: 'Using props to pass data ',\n      exercises: 7,\n      id: 2\n    }, {\n      name: 'State of a component ',\n      exercises: 14,\n      id: 3\n    }, {\n      name: 'Redux ',\n      exercises: 11,\n      id: 4\n    }]\n  }, {\n    name: 'Node.js ',\n    id: 2,\n    parts: [{\n      name: 'Routing ',\n      exercises: 3,\n      id: 1\n    }, {\n      name: 'Middlewares ',\n      exercises: 7,\n      id: 2\n    }]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: courses.map(course => /*#__PURE__*/_jsxDEV(Course, {\n      course: course\n    }, course.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 30\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_c6 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"Course\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"sources":["/home/heather/part1/src/App.js"],"names":["React","Header","props","name","Part","console","log","exercises","Content","parts","map","part","id","Total","total","reduce","sum","currentNumber","Course","course","App","courses"],"mappings":"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","sourcesContent":["import React from 'react'\n\nconst Header = (props) => {\n \n  return (\n    <div>\n      <h1>{props.name}</h1>\n    </div>\n  )\n}\nconst Part = (props) => {\n  console.log(props)\n  \n  return (\n    <div>\n      {props.name}{props.exercises}\n    </div>\n  )\n}\nconst Content = ({parts}) =>  parts.map(part => \n    \n    <Part name={part.name}exercises={part.exercises}key={part.id}/>\n  )\n  \n\nconst Total = ({parts}) => {\n  const total = parts.reduce((sum, currentNumber) => sum + currentNumber.exercises, 0)\n  return (\n    <div>\n      <p>Total of {total} exercises</p>\n    </div>\n  )\n  }\n\nconst Course = ({course}) => {\n  return (\n    <div>\n      <Header name={course.name} />\n      <Content parts={course.parts} />\n      <Total parts={course.parts} />\n    </div>\n  )\n\n}\nconst App = () => {\n  const courses = [\n    {\n      name: 'Half Stack application development ',\n      id: 1,\n      parts: [\n        {\n          name: 'Fundamentals of React ',\n          exercises: 10,\n          id: 1\n        },\n        {\n          name: 'Using props to pass data ',\n          exercises: 7,\n          id: 2\n        },\n        {\n          name: 'State of a component ',\n          exercises: 14,\n          id: 3\n        },\n        {\n          name: 'Redux ',\n          exercises: 11,\n          id: 4\n        }\n      ]\n    }, \n    {\n      name: 'Node.js ',\n      id: 2,\n      parts: [\n        {\n          name: 'Routing ',\n          exercises: 3,\n          id: 1\n        },\n        {\n          name: 'Middlewares ',\n          exercises: 7,\n          id: 2\n        }\n      ]\n    }\n  ]\n\n  \n  return (\n    <div>\n      {courses.map(course => <Course key={course.id} course={course} />)}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}